buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0-beta6'
    }
}

apply plugin: 'com.android.application'

dependencies {
    repositories {
        jcenter()
    }
    compile group: 'com.google.android.gms', name: 'play-services-maps', version: '8.4.0'
    compile group: 'com.google.android.gms', name: 'play-services-analytics', version: '8.4.0'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.3'
    compile group: 'com.android.support', name: 'appcompat-v7', version: '23.2.0'
    compile group: 'com.android.support', name: 'design', version: '23.2.0'
    compile group: 'com.android.support', name: 'support-v4', version: '23.2.0'
    compile group: 'com.android.support', name: 'preference-v7', version: '23.2.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.7.1'
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    signingConfigs {
        release {
            def propsFile = rootProject.file('keystore.properties')
            if (propsFile.exists() && gradle.startParameter.taskNames.any { it.contains('Release') || it.contains('build') }) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                File storeF = new File(props['storeFile'].toString())

                storeFile = storeF
                storePassword new String(System.console().readPassword("\n\$ Enter keystore password: "))
                keyAlias = props['keyAlias']
                keyPassword new String(System.console().readPassword("\n\$ Enter alias password: "))
            } else {
                storeFile file('default')
                storePassword 'default'
                keyAlias 'default'
                keyPassword 'default'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard-android-optimize.txt'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}